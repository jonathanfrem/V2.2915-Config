
[gcode_macro CANCEL_PRINT]
description = Cancel the actual running print
rename_existing = CANCEL_PRINT_BASE
gcode = 
	TURN_OFF_HEATERS
	CANCEL_PRINT_BASE

[gcode_macro PAUSE]
description = Pause the actual running print
rename_existing = PAUSE_BASE
variable_extrude = 1.0
gcode = 
	{% set E = printer["gcode_macro PAUSE"].extrude|float %}
	{% set x_park = printer.toolhead.axis_maximum.x|float - 5.0 %}
	{% set y_park = printer.toolhead.axis_maximum.y|float - 5.0 %}
	{% set max_z = printer.toolhead.axis_maximum.z|float %}
	{% set act_z = printer.toolhead.position.z|float %}
	{% if act_z < (max_z - 2.0) %}
	{% set z_safe = 2.0 %}
	{% else %}
	{% set z_safe = max_z - act_z %}
	{% endif %}
	PAUSE_BASE
	G91
	{% if printer.extruder.can_extrude|lower == 'true' %}
	G1 E-{E} F2100
	{% else %}
	{action_respond_info("Extruder not hot enough")}
	{% endif %}
	{% if "xyz" in printer.toolhead.homed_axes %}
	G1 Z{z_safe} F900
	G90
	G1 X{x_park} Y{y_park} F6000
	{% else %}
	{action_respond_info("Printer not homed")}
	{% endif %}

[gcode_macro RESUME]
description = Resume the actual running print
rename_existing = RESUME_BASE
gcode = 
	{% set E = printer["gcode_macro PAUSE"].extrude|float %}
	{% if 'VELOCITY' in params|upper %}
	{% set get_params = ('VELOCITY=' + params.VELOCITY)  %}
	{%else %}
	{% set get_params = "" %}
	{% endif %}
	{% if printer.extruder.can_extrude|lower == 'true' %}
	G91
	G1 E{E} F2100
	{% else %}
	{action_respond_info("Extruder not hot enough")}
	{% endif %}
	RESUME_BASE {get_params}


[gcode_macro _BEDFANVARS]
variable_threshold = 100
variable_fast = 0.6
variable_slow = 0.2
gcode = 

[fan_generic BedFans]
pin = PA8
kick_start_time = 0.5

[gcode_macro BEDFANSSLOW]
gcode = 
	{% set SLOW = printer["gcode_macro _BEDFANVARS"].slow|float %}
	SET_FAN_SPEED FAN=BedFans SPEED={SLOW}

[gcode_macro BEDFANSFAST]
gcode = 
	{% set FAST = printer["gcode_macro _BEDFANVARS"].fast|float %}
	SET_FAN_SPEED FAN=BedFans SPEED={FAST}

[gcode_macro BEDFANSOFF]
gcode = 
	SET_FAN_SPEED FAN=BedFans SPEED=0

[gcode_macro SET_HEATER_TEMPERATURE]
rename_existing = _SET_HEATER_TEMPERATURE
gcode = 
	{% set HEATER = params.HEATER|default("None") %}
	{% set TARGET = params.TARGET|default(0)|int %}
	{% set THRESHOLD = printer["gcode_macro _BEDFANVARS"].threshold|int %}
	{% if HEATER|lower == "extruder" %}
	M104 S{TARGET}
	{% elif HEATER|lower == "heater_bed" %}
	M99140 S{TARGET}
	{% else %}
	{action_respond_info("Heater %s not supported" % HEATER)}
	{% endif %}
	{% if HEATER|lower == "heater_bed" %}
	{% if TARGET >= THRESHOLD %}
	BEDFANSSLOW
	UPDATE_DELAYED_GCODE ID=bedfanloop DURATION=1
	{% else %}
	BEDFANSOFF
	UPDATE_DELAYED_GCODE ID=bedfanloop DURATION=0
	{% endif %}
	{% endif %}

[gcode_macro M190]
rename_existing = M99190
gcode = 
	{% set S = params.S|int %}
	{% set THRESHOLD = printer["gcode_macro _BEDFANVARS"].threshold|int %}
	{% if S >= THRESHOLD %}
	BEDFANSSLOW
	{% else %}
	BEDFANSOFF
	{% endif %}
	M140 {% for p in params
	%}{'%s%s' % (p, params[p])}{%
	endfor %}
	{% if S != 0 %}
	TEMPERATURE_WAIT SENSOR=heater_bed MINIMUM={S|int} MAXIMUM={S|int + 5}
	{% endif %}
	{% if S >= THRESHOLD %}
	BEDFANSFAST
	{% endif %}

[gcode_macro M140]
rename_existing = M99140
gcode = 
	{% set S = params.S|float %}
	SET_HEATER_TEMPERATURE HEATER=heater_bed TARGET={S}

[gcode_macro TURN_OFF_HEATERS]
rename_existing = _TURN_OFF_HEATERS
gcode = 
	BEDFANSOFF
	_TURN_OFF_HEATERS